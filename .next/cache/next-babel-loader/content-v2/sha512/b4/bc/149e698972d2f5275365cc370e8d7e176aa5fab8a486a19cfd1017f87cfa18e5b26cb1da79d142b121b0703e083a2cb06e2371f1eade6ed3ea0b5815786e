{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/folly/dev/match_game/match_game/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/folly/dev/match_game/match_game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/folly/dev/match_game/match_game/pages/SourceBox.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { Colors, SVGIcon } from './common';\nvar style = {\n  border: '1px dashed gray',\n  padding: '0.5rem',\n  margin: '0.5rem'\n};\nexport var SourceBox = function SourceBox(_ref) {\n  _s();\n\n  var color = _ref.color,\n      children = _ref.children;\n\n  var _useState = useState(false),\n      forbidDrag = _useState[0],\n      setForbidDrag = _useState[1];\n\n  var _useDrag = useDrag({\n    item: {\n      type: \"\".concat(color)\n    },\n    canDrag: !forbidDrag,\n    collect: function collect(monitor) {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  var onToggleForbidDrag = useCallback(function () {\n    setForbidDrag(!forbidDrag);\n  }, [forbidDrag]);\n  var backgroundColor = useMemo(function () {\n    switch (color) {\n      case Colors.YELLOW:\n        return 'lightgoldenrodyellow';\n\n      case Colors.BLUE:\n        return 'lightblue';\n\n      default:\n        return 'lightgoldenrodyellow';\n    }\n  }, [color]);\n  var containerStyle = useMemo(function () {\n    return _objectSpread(_objectSpread({}, style), {}, {\n      backgroundColor: backgroundColor,\n      opacity: isDragging ? 0.4 : 1,\n      cursor: forbidDrag ? 'default' : 'move'\n    });\n  }, [isDragging, forbidDrag, backgroundColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    draggable: true,\n    ref: drag,\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      cursor: 'move'\n    },\n    children: /*#__PURE__*/_jsxDEV(SVGIcon, {\n      draggable: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        draggable: true,\n        src: '/whale.svg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this) // <div ref={drag} style={containerStyle}>\n  //   <input\n  //     type=\"checkbox\"\n  //     checked={forbidDrag}\n  //     onChange={onToggleForbidDrag}\n  //   />\n  //   <small>Forbid drag</small>\n  //   {children}\n  // </div>\n  ;\n};\n\n_s(SourceBox, \"Xo2u9nMLnmt5hckTYdcl1zv3shA=\", false, function () {\n  return [useDrag];\n});\n\n_c = SourceBox;\nexport default SourceBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"SourceBox\");","map":{"version":3,"sources":["/Users/folly/dev/match_game/match_game/pages/SourceBox.tsx"],"names":["React","useState","useCallback","useMemo","useDrag","Colors","SVGIcon","style","border","padding","margin","SourceBox","color","children","forbidDrag","setForbidDrag","item","type","canDrag","collect","monitor","isDragging","drag","onToggleForbidDrag","backgroundColor","YELLOW","BLUE","containerStyle","opacity","cursor"],"mappings":";;;;;;;;;;;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAA2C,WAA3C;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,UAAhC;AAGA,IAAMC,KAA0B,GAAG;AACjCC,EAAAA,MAAM,EAAE,iBADyB;AAEjCC,EAAAA,OAAO,EAAE,QAFwB;AAGjCC,EAAAA,MAAM,EAAE;AAHyB,CAAnC;AAWA,OAAO,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAAyB;AAAA;;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACtCZ,QAAQ,CAAC,KAAD,CAD8B;AAAA,MACnEa,UADmE;AAAA,MACvDC,aADuD;;AAAA,iBAE3CX,OAAO,CAAC;AACrCY,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,YAAKL,KAAL;AAAN,KAD+B;AAErCM,IAAAA,OAAO,EAAE,CAACJ,UAF2B;AAGrCK,IAAAA,OAAO,EAAE,iBAACC,OAAD;AAAA,aAAiC;AACxCC,QAAAA,UAAU,EAAED,OAAO,CAACC,UAAR;AAD4B,OAAjC;AAAA;AAH4B,GAAD,CAFoC;AAAA;AAAA,MAEjEA,UAFiE,gBAEjEA,UAFiE;AAAA,MAEnDC,IAFmD;;AAU1E,MAAMC,kBAAkB,GAAGrB,WAAW,CAAC,YAAM;AAC3Ca,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFqC,EAEnC,CAACA,UAAD,CAFmC,CAAtC;AAIA,MAAMU,eAAe,GAAGrB,OAAO,CAAC,YAAM;AACpC,YAAQS,KAAR;AACE,WAAKP,MAAM,CAACoB,MAAZ;AACE,eAAO,sBAAP;;AACF,WAAKpB,MAAM,CAACqB,IAAZ;AACE,eAAO,WAAP;;AACF;AACE,eAAO,sBAAP;AANJ;AAQD,GAT8B,EAS5B,CAACd,KAAD,CAT4B,CAA/B;AAWA,MAAMe,cAAc,GAAGxB,OAAO,CAC5B;AAAA,2CACKI,KADL;AAEEiB,MAAAA,eAAe,EAAfA,eAFF;AAGEI,MAAAA,OAAO,EAAEP,UAAU,GAAG,GAAH,GAAS,CAH9B;AAIEQ,MAAAA,MAAM,EAAEf,UAAU,GAAG,SAAH,GAAe;AAJnC;AAAA,GAD4B,EAO5B,CAACO,UAAD,EAAaP,UAAb,EAAyBU,eAAzB,CAP4B,CAA9B;AASA,sBACE;AAAK,IAAA,SAAS,MAAd;AAAe,IAAA,GAAG,EAAEF,IAApB;AACQ,IAAA,KAAK,EAAE;AACHM,MAAAA,OAAO,EAAEP,UAAU,GAAG,GAAH,GAAS,CADzB;AAEHQ,MAAAA,MAAM,EAAE;AAFL,KADf;AAAA,2BAKQ,QAAC,OAAD;AAAS,MAAA,SAAS,MAAlB;AAAA,6BACI;AAAK,QAAA,SAAS,MAAd;AAAe,QAAA,GAAG,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALR;AAAA;AAAA;AAAA;AAAA,WADF,CAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBF;AAoBD,CAtDM;;GAAMlB,S;UAEoBP,O;;;KAFpBO,S;AAwDb,eAAeA,SAAf","sourcesContent":["import styled from '@emotion/styled'\nimport React, { useState, useCallback, useMemo } from 'react'\nimport { useDrag, DragSourceMonitor } from 'react-dnd'\nimport { Colors, SVGIcon } from './common'\n\n\nconst style: React.CSSProperties = {\n  border: '1px dashed gray',\n  padding: '0.5rem',\n  margin: '0.5rem',\n}\n\nexport interface SourceBoxProps {\n  color?: string\n  onToggleForbidDrag?: () => void\n}\n\nexport const SourceBox: React.FC<SourceBoxProps> = ({ color, children }) => {\n  const [forbidDrag, setForbidDrag] = useState(false)\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: `${color}` },\n    canDrag: !forbidDrag,\n    collect: (monitor: DragSourceMonitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  const onToggleForbidDrag = useCallback(() => {\n    setForbidDrag(!forbidDrag)\n  }, [forbidDrag])\n\n  const backgroundColor = useMemo(() => {\n    switch (color) {\n      case Colors.YELLOW:\n        return 'lightgoldenrodyellow'\n      case Colors.BLUE:\n        return 'lightblue'\n      default:\n        return 'lightgoldenrodyellow'\n    }\n  }, [color])\n\n  const containerStyle = useMemo(\n    () => ({\n      ...style,\n      backgroundColor,\n      opacity: isDragging ? 0.4 : 1,\n      cursor: forbidDrag ? 'default' : 'move',\n    }),\n    [isDragging, forbidDrag, backgroundColor],\n  )\n  return (\n    <div draggable ref={drag} \n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}>\n            <SVGIcon draggable>\n                <img draggable src={'/whale.svg'}/>\n            </SVGIcon>\n        </div>\n    // <div ref={drag} style={containerStyle}>\n    //   <input\n    //     type=\"checkbox\"\n    //     checked={forbidDrag}\n    //     onChange={onToggleForbidDrag}\n    //   />\n    //   <small>Forbid drag</small>\n    //   {children}\n    // </div>\n  )\n}\n\nexport default SourceBox;\n\n"]},"metadata":{},"sourceType":"module"}