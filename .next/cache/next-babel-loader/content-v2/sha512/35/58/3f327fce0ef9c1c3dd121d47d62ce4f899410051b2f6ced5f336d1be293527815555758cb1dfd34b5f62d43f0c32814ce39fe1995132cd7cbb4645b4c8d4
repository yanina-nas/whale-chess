{"ast":null,"code":"// import React, { FunctionComponent, PropsWithChildren, useState } from 'react'\n// import Square from './Square'\n// import { ItemTypes } from './constants';\n// import { useDrop } from 'react-dnd';\n// interface BoardSquareProps {\n//     x: number;\n//     y: number;\n//     moveAnimal: ( toX: number, toY: number ) => void;\n// }\n// const BoardSquare: FunctionComponent<BoardSquareProps> = (props: PropsWithChildren<BoardSquareProps>) => {\n//   const black = (props.x + props.y) % 2 === 1;\n//   const [{ isOver }, drop] = useDrop({\n//     accept: ItemTypes.ANIMAL,\n//     drop: () => props.moveAnimal(props.x, props.y),\n//     collect: monitor => ({\n//       isOver: !!monitor.isOver(),\n//     }),\n//   })\n//   return( \n//     <div\n//         ref={drop}\n//         style={{\n//         position: 'relative',\n//         width: '100%',\n//         height: '100%',\n//         }}\n//     >\n//       <Square black={black}>{props.children}</Square>\n//       {isOver && (\n//         <div\n//           style={{\n//             position: 'absolute',\n//             top: 0,\n//             left: 0,\n//             height: '100%',\n//             width: '100%',\n//             zIndex: 1,\n//             opacity: 0.5,\n//             backgroundColor: 'yellow',\n//           }}\n//         />\n//       )}\n//       </div> )\n// }\n// export default BoardSquare;","map":{"version":3,"sources":["/Users/folly/dev/match_game/match_game/pages/BoardSquare.tsx"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { FunctionComponent, PropsWithChildren, useState } from 'react'\n// import Square from './Square'\n// import { ItemTypes } from './constants';\n// import { useDrop } from 'react-dnd';\n\n// interface BoardSquareProps {\n//     x: number;\n//     y: number;\n//     moveAnimal: ( toX: number, toY: number ) => void;\n// }\n\n\n// const BoardSquare: FunctionComponent<BoardSquareProps> = (props: PropsWithChildren<BoardSquareProps>) => {\n//   const black = (props.x + props.y) % 2 === 1;\n//   const [{ isOver }, drop] = useDrop({\n//     accept: ItemTypes.ANIMAL,\n//     drop: () => props.moveAnimal(props.x, props.y),\n//     collect: monitor => ({\n//       isOver: !!monitor.isOver(),\n//     }),\n//   })\n\n//   return( \n//     <div\n//         ref={drop}\n//         style={{\n//         position: 'relative',\n//         width: '100%',\n//         height: '100%',\n//         }}\n//     >\n//       <Square black={black}>{props.children}</Square>\n//       {isOver && (\n//         <div\n//           style={{\n//             position: 'absolute',\n//             top: 0,\n//             left: 0,\n//             height: '100%',\n//             width: '100%',\n//             zIndex: 1,\n//             opacity: 0.5,\n//             backgroundColor: 'yellow',\n//           }}\n//         />\n//       )}\n//       </div> )\n// }\n\n// export default BoardSquare;"]},"metadata":{},"sourceType":"script"}