{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/folly/dev/match_game/match_game/pages/SourceBox.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback, useMemo } from 'react';\nimport { useDrag } from 'react-dnd';\nimport { Colors } from './colors';\nconst style = {\n  border: '1px dashed gray',\n  padding: '0.5rem',\n  margin: '0.5rem'\n};\nexport const SourceBox = ({\n  color,\n  children\n}) => {\n  const {\n    0: forbidDrag,\n    1: setForbidDrag\n  } = useState(false);\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    item: {\n      type: `${color}`\n    },\n    canDrag: !forbidDrag,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const onToggleForbidDrag = useCallback(() => {\n    setForbidDrag(!forbidDrag);\n  }, [forbidDrag]);\n  const backgroundColor = useMemo(() => {\n    switch (color) {\n      case Colors.YELLOW:\n        return 'lightgoldenrodyellow';\n\n      case Colors.BLUE:\n        return 'lightblue';\n\n      default:\n        return 'lightgoldenrodyellow';\n    }\n  }, [color]);\n  const containerStyle = useMemo(() => _objectSpread(_objectSpread({}, style), {}, {\n    backgroundColor,\n    opacity: isDragging ? 0.4 : 1,\n    cursor: forbidDrag ? 'default' : 'move'\n  }), [isDragging, forbidDrag, backgroundColor]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: forbidDrag,\n      onChange: onToggleForbidDrag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n      children: \"Forbid drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\nexport default SourceBox;","map":{"version":3,"sources":["/Users/folly/dev/match_game/match_game/pages/SourceBox.tsx"],"names":["React","useState","useCallback","useMemo","useDrag","Colors","style","border","padding","margin","SourceBox","color","children","forbidDrag","setForbidDrag","isDragging","drag","item","type","canDrag","collect","monitor","onToggleForbidDrag","backgroundColor","YELLOW","BLUE","containerStyle","opacity","cursor"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAA2C,WAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,MAAMC,KAA0B,GAAG;AACjCC,EAAAA,MAAM,EAAE,iBADyB;AAEjCC,EAAAA,OAAO,EAAE,QAFwB;AAGjCC,EAAAA,MAAM,EAAE;AAHyB,CAAnC;AAWA,OAAO,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC1E,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC;AAAEc,IAAAA;AAAF,GAAD,EAAiBC,IAAjB,IAAyBZ,OAAO,CAAC;AACrCa,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAG,GAAEP,KAAM;AAAjB,KAD+B;AAErCQ,IAAAA,OAAO,EAAE,CAACN,UAF2B;AAGrCO,IAAAA,OAAO,EAAGC,OAAD,KAAiC;AACxCN,MAAAA,UAAU,EAAEM,OAAO,CAACN,UAAR;AAD4B,KAAjC;AAH4B,GAAD,CAAtC;AAQA,QAAMO,kBAAkB,GAAGpB,WAAW,CAAC,MAAM;AAC3CY,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD,GAFqC,EAEnC,CAACA,UAAD,CAFmC,CAAtC;AAIA,QAAMU,eAAe,GAAGpB,OAAO,CAAC,MAAM;AACpC,YAAQQ,KAAR;AACE,WAAKN,MAAM,CAACmB,MAAZ;AACE,eAAO,sBAAP;;AACF,WAAKnB,MAAM,CAACoB,IAAZ;AACE,eAAO,WAAP;;AACF;AACE,eAAO,sBAAP;AANJ;AAQD,GAT8B,EAS5B,CAACd,KAAD,CAT4B,CAA/B;AAWA,QAAMe,cAAc,GAAGvB,OAAO,CAC5B,sCACKG,KADL;AAEEiB,IAAAA,eAFF;AAGEI,IAAAA,OAAO,EAAEZ,UAAU,GAAG,GAAH,GAAS,CAH9B;AAIEa,IAAAA,MAAM,EAAEf,UAAU,GAAG,SAAH,GAAe;AAJnC,IAD4B,EAO5B,CAACE,UAAD,EAAaF,UAAb,EAAyBU,eAAzB,CAP4B,CAA9B;AAUA,sBACE;AAAK,IAAA,GAAG,EAAEP,IAAV;AAAgB,IAAA,KAAK,EAAEU,cAAvB;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,OAAO,EAAEb,UAFX;AAGE,MAAA,QAAQ,EAAES;AAHZ;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGV,QAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9CM;AAgDP,eAAeF,SAAf","sourcesContent":["import React, { useState, useCallback, useMemo } from 'react'\nimport { useDrag, DragSourceMonitor } from 'react-dnd'\nimport { Colors } from './colors'\n\nconst style: React.CSSProperties = {\n  border: '1px dashed gray',\n  padding: '0.5rem',\n  margin: '0.5rem',\n}\n\nexport interface SourceBoxProps {\n  color?: string\n  onToggleForbidDrag?: () => void\n}\n\nexport const SourceBox: React.FC<SourceBoxProps> = ({ color, children }) => {\n  const [forbidDrag, setForbidDrag] = useState(false)\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: `${color}` },\n    canDrag: !forbidDrag,\n    collect: (monitor: DragSourceMonitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  })\n\n  const onToggleForbidDrag = useCallback(() => {\n    setForbidDrag(!forbidDrag)\n  }, [forbidDrag])\n\n  const backgroundColor = useMemo(() => {\n    switch (color) {\n      case Colors.YELLOW:\n        return 'lightgoldenrodyellow'\n      case Colors.BLUE:\n        return 'lightblue'\n      default:\n        return 'lightgoldenrodyellow'\n    }\n  }, [color])\n\n  const containerStyle = useMemo(\n    () => ({\n      ...style,\n      backgroundColor,\n      opacity: isDragging ? 0.4 : 1,\n      cursor: forbidDrag ? 'default' : 'move',\n    }),\n    [isDragging, forbidDrag, backgroundColor],\n  )\n\n  return (\n    <div ref={drag} style={containerStyle}>\n      <input\n        type=\"checkbox\"\n        checked={forbidDrag}\n        onChange={onToggleForbidDrag}\n      />\n      <small>Forbid drag</small>\n      {children}\n    </div>\n  )\n}\n\nexport default SourceBox;"]},"metadata":{},"sourceType":"module"}