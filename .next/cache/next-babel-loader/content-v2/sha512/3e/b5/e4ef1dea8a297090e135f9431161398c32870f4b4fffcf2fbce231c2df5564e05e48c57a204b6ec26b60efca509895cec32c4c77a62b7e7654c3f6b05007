{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/folly/dev/match_game/match_game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/folly/dev/match_game/match_game/pages/BoardSquare.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Square from './Square';\nimport { ItemTypes } from './constants';\nimport { useDrop } from 'react-dnd';\n\nvar BoardSquare = function BoardSquare(props) {\n  _s();\n\n  var black = (props.x + props.y) % 2 === 1;\n\n  var _useDrop = useDrop({\n    accept: ItemTypes.ANIMAL,\n    drop: function drop() {\n      return props.moveAnimal(props.x, props.y);\n    },\n    collect: function collect(monitor) {\n      return {\n        isOver: !!monitor.isOver()\n      };\n    }\n  }),\n      _useDrop2 = _slicedToArray(_useDrop, 2),\n      isOver = _useDrop2[0].isOver,\n      drop = _useDrop2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Square, {\n      black: black,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), isOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        zIndex: 1,\n        opacity: 0.5,\n        backgroundColor: 'yellow'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(BoardSquare, \"9166pYLrZ/JzF75YDim8ZjfICTM=\", false, function () {\n  return [useDrop];\n});\n\n_c = BoardSquare;\nexport default BoardSquare;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardSquare\");","map":{"version":3,"sources":["/Users/folly/dev/match_game/match_game/pages/BoardSquare.tsx"],"names":["React","Square","ItemTypes","useDrop","BoardSquare","props","black","x","y","accept","ANIMAL","drop","moveAnimal","collect","monitor","isOver","position","width","height","children","top","left","zIndex","opacity","backgroundColor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAsE,OAAtE;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAUA,IAAMC,WAAgD,GAAG,SAAnDA,WAAmD,CAACC,KAAD,EAAgD;AAAA;;AACvG,MAAMC,KAAK,GAAG,CAACD,KAAK,CAACE,CAAN,GAAUF,KAAK,CAACG,CAAjB,IAAsB,CAAtB,KAA4B,CAA1C;;AADuG,iBAE5EL,OAAO,CAAC;AACjCM,IAAAA,MAAM,EAAEP,SAAS,CAACQ,MADe;AAEjCC,IAAAA,IAAI,EAAE;AAAA,aAAMN,KAAK,CAACO,UAAN,CAAiBP,KAAK,CAACE,CAAvB,EAA0BF,KAAK,CAACG,CAAhC,CAAN;AAAA,KAF2B;AAGjCK,IAAAA,OAAO,EAAE,iBAAAC,OAAO;AAAA,aAAK;AACnBC,QAAAA,MAAM,EAAE,CAAC,CAACD,OAAO,CAACC,MAAR;AADS,OAAL;AAAA;AAHiB,GAAD,CAFqE;AAAA;AAAA,MAE9FA,MAF8F,gBAE9FA,MAF8F;AAAA,MAEpFJ,IAFoF;;AAUvG,sBACE;AACI,IAAA,GAAG,EAAEA,IADT;AAEI,IAAA,KAAK,EAAE;AACPK,MAAAA,QAAQ,EAAE,UADH;AAEPC,MAAAA,KAAK,EAAE,MAFA;AAGPC,MAAAA,MAAM,EAAE;AAHD,KAFX;AAAA,4BAQE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEZ,KAAf;AAAA,gBAAuBD,KAAK,CAACc;AAA7B;AAAA;AAAA;AAAA;AAAA,aARF,EASGJ,MAAM,iBACL;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,UADL;AAELI,QAAAA,GAAG,EAAE,CAFA;AAGLC,QAAAA,IAAI,EAAE,CAHD;AAILH,QAAAA,MAAM,EAAE,MAJH;AAKLD,QAAAA,KAAK,EAAE,MALF;AAMLK,QAAAA,MAAM,EAAE,CANH;AAOLC,QAAAA,OAAO,EAAE,GAPJ;AAQLC,QAAAA,eAAe,EAAE;AARZ;AADT;AAAA;AAAA;AAAA;AAAA,aAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CAnCD;;GAAMpB,W;UAEuBD,O;;;KAFvBC,W;AAqCN,eAAeA,WAAf","sourcesContent":["import React, { FunctionComponent, PropsWithChildren, useState } from 'react'\nimport Square from './Square'\nimport { ItemTypes } from './constants';\nimport { useDrop } from 'react-dnd';\n\ninterface BoardSquareProps {\n    x: number;\n    y: number;\n    moveAnimal: ( toX: number, toY: number ) => void;\n}\n\n\n\nconst BoardSquare: FunctionComponent<BoardSquareProps> = (props: PropsWithChildren<BoardSquareProps>) => {\n  const black = (props.x + props.y) % 2 === 1;\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.ANIMAL,\n    drop: () => props.moveAnimal(props.x, props.y),\n    collect: monitor => ({\n      isOver: !!monitor.isOver(),\n    }),\n  })\n\n  return( \n    <div\n        ref={drop}\n        style={{\n        position: 'relative',\n        width: '100%',\n        height: '100%',\n        }}\n    >\n      <Square black={black}>{props.children}</Square>\n      {isOver && (\n        <div\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n            opacity: 0.5,\n            backgroundColor: 'yellow',\n          }}\n        />\n      )}\n      </div> )\n}\n\nexport default BoardSquare;"]},"metadata":{},"sourceType":"module"}