{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/folly/dev/match_game/match_game/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/folly/dev/match_game/match_game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/folly/dev/match_game/match_game/pages/Animal.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: \", \"px;\\n    height: \", \"px;\\n    svg {\\n        width: \", \"px;\\n        height: \", \"px;\\n        fill: \", \";\\n        path {\\n            stroke: \", \";;\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from '@emotion/styled';\nimport React from 'react';\nimport { ItemTypes } from './constants';\nimport { useDrag } from 'react-dnd';\n\nvar Animal = function Animal() {\n  _s();\n\n  var _useDrag = useDrag({\n    item: {\n      type: ItemTypes.ANIMAL\n    },\n    collect: function collect(monitor) {\n      return {\n        isDragging: !!monitor.isDragging()\n      };\n    }\n  }),\n      _useDrag2 = _slicedToArray(_useDrag, 2),\n      isDragging = _useDrag2[0].isDragging,\n      drag = _useDrag2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    draggable: true,\n    ref: drag,\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      cursor: 'move'\n    },\n    children: /*#__PURE__*/_jsxDEV(StyledIcon, {\n      draggable: true,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        draggable: true,\n        src: '/whale.svg'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Animal, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n\n_c = Animal;\nexport default Animal;\nvar StyledIcon = styled.div(_templateObject(), function (props) {\n  return props.width;\n}, function (props) {\n  return props.height;\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.height;\n}, function (props) {\n  return props.color;\n}, function (props) {\n  return props.color;\n});\n_c2 = StyledIcon;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Animal\");\n$RefreshReg$(_c2, \"StyledIcon\");","map":{"version":3,"sources":["/Users/folly/dev/match_game/match_game/pages/Animal.tsx"],"names":["styled","React","ItemTypes","useDrag","Animal","item","type","ANIMAL","collect","monitor","isDragging","drag","opacity","cursor","StyledIcon","div","props","width","height","color"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,KAAP,MAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;;AAQA,IAAMC,MAAsC,GAAG,SAAzCA,MAAyC,GAAM;AAAA;;AAAA,iBAElBD,OAAO,CAAC;AACnCE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAEJ,SAAS,CAACK;AAAlB,KAD6B;AAEnCC,IAAAA,OAAO,EAAE,iBAACC,OAAD;AAAA,aAAc;AACrBC,QAAAA,UAAU,EAAE,CAAC,CAACD,OAAO,CAACC,UAAR;AADO,OAAd;AAAA;AAF0B,GAAD,CAFW;AAAA;AAAA,MAExCA,UAFwC,gBAExCA,UAFwC;AAAA,MAE1BC,IAF0B;;AASjD,sBACI;AAAK,IAAA,SAAS,MAAd;AAAe,IAAA,GAAG,EAAEA,IAApB;AACI,IAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEF,UAAU,GAAG,GAAH,GAAS,CADzB;AAEHG,MAAAA,MAAM,EAAE;AAFL,KADX;AAAA,2BAKI,QAAC,UAAD;AAAY,MAAA,SAAS,MAArB;AAAA,6BACI;AAAK,QAAA,SAAS,MAAd;AAAe,QAAA,GAAG,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAWH,CApBD;;GAAMT,M;UAE6BD,O;;;KAF7BC,M;AAsBN,eAAeA,MAAf;AAUA,IAAMU,UAAU,GAAGd,MAAM,CAACe,GAAV,oBACH,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAV;AAAA,CADF,EAEF,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,MAAV;AAAA,CAFH,EAIC,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAV;AAAA,CAJN,EAKE,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,MAAV;AAAA,CALP,EAMA,UAAAF,KAAK;AAAA,SAAIA,KAAK,CAACG,KAAV;AAAA,CANL,EAQM,UAAAH,KAAK;AAAA,SAAIA,KAAK,CAACG,KAAV;AAAA,CARX,CAAhB;MAAML,U","sourcesContent":["import styled from '@emotion/styled';\nimport React, { FunctionComponent } from 'react';\nimport { ItemTypes } from './constants'\nimport { useDrag } from 'react-dnd'\n\ninterface AnimalProps{\n    isSorted?: boolean;\n    type: string;\n}\n\n\nconst Animal: FunctionComponent<AnimalProps> = () => {\n\n    const [{ isDragging }, drag] = useDrag({\n        item: { type: ItemTypes.ANIMAL },\n        collect: (monitor) => ({\n          isDragging: !!monitor.isDragging()\n        })\n    });\n\n    return (\n        <div draggable ref={drag} \n            style={{\n                opacity: isDragging ? 0.5 : 1,\n                cursor: 'move',\n            }}>\n            <StyledIcon draggable>\n                <img draggable src={'/whale.svg'}/>\n            </StyledIcon>\n        </div>\n    )\n}\n\nexport default Animal;\n\ninterface Props {\n    isFullWidth?: boolean;\n    height?: number;\n    width?: number;\n    color?: string;\n    draggable?: boolean;\n}\n  \nconst StyledIcon = styled.div<Props>`\n    width: ${props => props.width}px;\n    height: ${props => props.height}px;\n    svg {\n        width: ${props => props.width}px;\n        height: ${props => props.height}px;\n        fill: ${props => props.color};\n        path {\n            stroke: ${props => props.color};;\n        }\n    }\n`;"]},"metadata":{},"sourceType":"module"}