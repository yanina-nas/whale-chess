{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/folly/dev/match_game/match_game/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/folly/dev/match_game/match_game/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/folly/dev/match_game/match_game/pages/Board.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    width: 1000px;\\n    height: 1000px;\\n    background-image: url(\", \");\\n    display: flex;\\n    flex-wrap: wrap;\\n    margin: 40px auto;\\n    \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport BoardSquare from './BoardSquare';\nimport Animal from './Animal';\nimport styled from '@emotion/styled';\nimport { StatefulTargetBox as TargetBox } from './TargetBox';\nimport SourceBox from './SourceBox';\nvar background = '/pattern.jpg';\n\nfunction renderSquare(i, _ref, moveAnimal) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      animalX = _ref2[0],\n      animalY = _ref2[1];\n\n  var x = i % 8;\n  var y = Math.floor(i / 8);\n  var black = (x + y) % 2 === 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: function onClick() {\n      return moveAnimal(x, y);\n    },\n    style: {\n      width: '12.5%',\n      minHeight: '12.5%'\n    },\n    children: /*#__PURE__*/_jsxDEV(BoardSquare, {\n      x: x,\n      y: y,\n      moveAnimal: moveAnimal,\n      children: renderPiece(x, y, [animalX, animalY])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n;\n\nfunction renderPiece(x, y, _ref3) {\n  var _ref4 = _slicedToArray(_ref3, 2),\n      animalX = _ref4[0],\n      animalY = _ref4[1];\n\n  var isAnimalHere = x === animalX && y === animalY;\n\n  if (isAnimalHere) {\n    return /*#__PURE__*/_jsxDEV(Animal, {\n      type: 'type'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n}\n\nvar BoardElement = styled.div(_templateObject(), background);\n_c = BoardElement;\n\nvar Board = function Board(props) {\n  _s();\n\n  var squares = [];\n\n  for (var i = 0; i < 64; i++) {\n    squares.push(renderSquare(i, props.animalPosition, props.moveAnimal));\n  }\n\n  var _useState = useState([0, 0]),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var moveAnimal = function moveAnimal(toX, toY) {\n    setPosition([toX, toY]);\n  };\n\n  var getRandArray = function getRandArray() {\n    var result = [];\n\n    for (var index = 0; index < 2; index++) {\n      result.push(Math.round(Math.random() * 8));\n    }\n\n    return result;\n  };\n\n  return /*#__PURE__*/_jsxDEV(BoardElement, {\n    children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'hidden',\n          clear: 'both',\n          margin: '-.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(SourceBox, {\n            src: '/whale.svg',\n            animalType: 'whale',\n            id: 1,\n            animalPosition: getRandArray,\n            moveAnimal: moveAnimal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(SourceBox, {\n          src: '/whale.svg',\n          animalType: 'whale',\n          id: 2,\n          animalPosition: getRandArray,\n          moveAnimal: moveAnimal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(SourceBox, {\n            src: '/whale.svg',\n            animalType: 'whale',\n            id: 3,\n            animalPosition: getRandArray,\n            moveAnimal: moveAnimal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(SourceBox, {\n            src: '/whale.svg',\n            animalType: 'whale',\n            id: 4,\n            animalPosition: getRandArray,\n            moveAnimal: moveAnimal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(SourceBox, {\n            src: '/whale.svg',\n            animalType: 'whale',\n            id: 5,\n            animalPosition: getRandArray,\n            moveAnimal: moveAnimal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'left'\n          },\n          children: /*#__PURE__*/_jsxDEV(SourceBox, {\n            src: '/whale.svg',\n            animalType: 'whale',\n            id: 6,\n            animalPosition: getRandArray,\n            moveAnimal: moveAnimal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"float\": 'left',\n            marginLeft: '5rem',\n            marginTop: '.5rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(TargetBox, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false), squares]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Board, \"Lji5AsNsv7y2BpnVqEZLrS0ICqQ=\");\n\n_c2 = Board;\nexport default Board;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardElement\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"sources":["/Users/folly/dev/match_game/match_game/pages/Board.tsx"],"names":["React","useState","BoardSquare","Animal","styled","StatefulTargetBox","TargetBox","SourceBox","background","renderSquare","i","moveAnimal","animalX","animalY","x","y","Math","floor","black","width","minHeight","renderPiece","isAnimalHere","BoardElement","div","Board","props","squares","push","animalPosition","position","setPosition","toX","toY","getRandArray","result","index","round","random","overflow","clear","margin","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, PropsWithChildren, useState } from 'react';\nimport BoardSquare from './BoardSquare';\nimport Animal from './Animal';\nimport styled from '@emotion/styled';\nimport { StatefulTargetBox as TargetBox } from './TargetBox';\nimport SourceBox from './SourceBox';\nimport { Colors } from './common';\n\n\ninterface BoardProps {\n  animalPosition: number[];\n  moveAnimal: (toX: number, toY: number) => void;\n}\n\nconst background = '/pattern.jpg'\n\nfunction renderSquare(i, [animalX, animalY]: number[], moveAnimal: (toX: number, toY: number) => void) {\n  const x = i % 8\n  const y = Math.floor(i / 8)\n  const black = (x + y) % 2 === 1\n\n  return (\n    <div onClick={() => moveAnimal(x, y)} key={i} style={{ width: '12.5%', minHeight: '12.5%' }}>\n      <BoardSquare x={x} y={y} moveAnimal={moveAnimal} >{renderPiece(x, y, [animalX, animalY])}</BoardSquare>\n    </div>\n  )\n};\n\nfunction renderPiece(x, y, [animalX, animalY]) {\n  const isAnimalHere = (x === animalX && y === animalY)\n  if (isAnimalHere) {\n    return <Animal type={'type'} />;\n  }\n}\n\n\nconst BoardElement = styled.div`\n    width: 1000px;\n    height: 1000px;\n    background-image: url(${background});\n    display: flex;\n    flex-wrap: wrap;\n    margin: 40px auto;\n    \n`;\n\nconst Board: FunctionComponent<BoardProps> = (props: PropsWithChildren<BoardProps>) => {\n  const squares = []\n  for (let i = 0; i < 64; i++) {\n    squares.push(renderSquare(i, props.animalPosition, props.moveAnimal))\n  }\n  const [position, setPosition] = useState([0, 0]);\n\n  const moveAnimal = (toX: number, toY: number) => {\n    setPosition([toX, toY]);\n  };\n\n  let getRandArray = () => {\n    let result = [];\n    for (let index = 0; index < 2; index++) {\n      result.push(Math.round((Math.random() * 8)));\n    }\n    return result;\n  };\n\n  return (\n    <BoardElement>\n      <>\n        <div style={{ overflow: 'hidden', clear: 'both', margin: '-.5rem' }}>\n          <div style={{ float: 'left' }}>\n            <SourceBox src={'/whale.svg'} animalType={'whale'} id={1} animalPosition={getRandArray} moveAnimal={moveAnimal} />\n          </div>\n         \n            <SourceBox src={'/whale.svg'} animalType={'whale'} id={2} animalPosition={getRandArray} moveAnimal={moveAnimal} />\n          \n          <div style={{ float: 'left' }}>\n            <SourceBox src={'/whale.svg'} animalType={'whale'} id={3} animalPosition={getRandArray} moveAnimal={moveAnimal} />\n          </div>\n          <div style={{ float: 'left' }}>\n            <SourceBox src={'/whale.svg'} animalType={'whale'} id={4} animalPosition={getRandArray} moveAnimal={moveAnimal} />\n          </div>\n          <div style={{ float: 'left' }}>\n            <SourceBox src={'/whale.svg'} animalType={'whale'} id={5} animalPosition={getRandArray} moveAnimal={moveAnimal} />\n          </div>\n          <div style={{ float: 'left' }}>\n            <SourceBox src={'/whale.svg'} animalType={'whale'} id={6} animalPosition={getRandArray} moveAnimal={moveAnimal} />\n          </div>\n\n\n          <div style={{ float: 'left', marginLeft: '5rem', marginTop: '.5rem' }}>\n            <TargetBox />\n          </div>\n        </div>\n      </>\n      {squares}\n    </BoardElement>\n  )\n}\n\nexport default Board;\n\n\n"]},"metadata":{},"sourceType":"module"}