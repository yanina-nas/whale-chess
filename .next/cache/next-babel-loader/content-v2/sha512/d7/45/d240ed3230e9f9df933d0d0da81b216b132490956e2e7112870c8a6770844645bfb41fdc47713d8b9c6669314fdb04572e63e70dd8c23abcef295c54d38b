{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/folly/dev/match_game/match_game/pages/TargetBox.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useCallback } from 'react';\nimport { useDrop } from 'react-dnd';\nimport { Colors } from './colors';\nconst style = {\n  border: '1px solid gray',\n  height: '15rem',\n  width: '15rem',\n  padding: '2rem',\n  textAlign: 'center'\n};\n\nconst TargetBox = ({\n  onDrop,\n  lastDroppedColor\n}) => {\n  const [{\n    isOver,\n    draggingColor,\n    canDrop\n  }, drop] = useDrop({\n    accept: [Colors.YELLOW],\n\n    drop(item) {\n      onDrop(item.type);\n      return undefined;\n    },\n\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      draggingColor: monitor.getItemType()\n    })\n  });\n  const opacity = isOver ? 1 : 0.7;\n  let backgroundColor = '#fff';\n\n  switch (draggingColor) {\n    case Colors.BLUE:\n      backgroundColor = 'lightblue';\n      break;\n\n    case Colors.YELLOW:\n      backgroundColor = 'lightgoldenrodyellow';\n      break;\n\n    default:\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      backgroundColor,\n      opacity\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Drop here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !canDrop && lastDroppedColor && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last dropped: \", lastDroppedColor]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 40\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\nexport const StatefulTargetBox = props => {\n  const {\n    0: lastDroppedColor,\n    1: setLastDroppedColor\n  } = useState(null);\n  const handleDrop = useCallback(color => setLastDroppedColor(color), []);\n  return /*#__PURE__*/_jsxDEV(TargetBox, _objectSpread(_objectSpread({}, props), {}, {\n    lastDroppedColor: lastDroppedColor,\n    onDrop: handleDrop\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\nexport default TargetBox;","map":{"version":3,"sources":["/Users/folly/dev/match_game/match_game/pages/TargetBox.tsx"],"names":["React","useState","useCallback","useDrop","Colors","style","border","height","width","padding","textAlign","TargetBox","onDrop","lastDroppedColor","isOver","draggingColor","canDrop","drop","accept","YELLOW","item","type","undefined","collect","monitor","getItemType","opacity","backgroundColor","BLUE","StatefulTargetBox","props","setLastDroppedColor","handleDrop","color"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,MAAT,QAAoC,UAApC;AAGA,MAAMC,KAA0B,GAAG;AACjCC,EAAAA,MAAM,EAAE,gBADyB;AAEjCC,EAAAA,MAAM,EAAE,OAFyB;AAGjCC,EAAAA,KAAK,EAAE,OAH0B;AAIjCC,EAAAA,OAAO,EAAE,MAJwB;AAKjCC,EAAAA,SAAS,EAAE;AALsB,CAAnC;;AAaA,MAAMC,SAAmC,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAkC;AAC5E,QAAM,CAAC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,aAAV;AAAyBC,IAAAA;AAAzB,GAAD,EAAqCC,IAArC,IAA6Cd,OAAO,CAAC;AACzDe,IAAAA,MAAM,EAAE,CAACd,MAAM,CAACe,MAAR,CADiD;;AAEzDF,IAAAA,IAAI,CAACG,IAAD,EAAY;AACdR,MAAAA,MAAM,CAACQ,IAAI,CAACC,IAAN,CAAN;AACA,aAAOC,SAAP;AACD,KALwD;;AAMzDC,IAAAA,OAAO,EAAGC,OAAD,KAAc;AACrBV,MAAAA,MAAM,EAAEU,OAAO,CAACV,MAAR,EADa;AAErBE,MAAAA,OAAO,EAAEQ,OAAO,CAACR,OAAR,EAFY;AAGrBD,MAAAA,aAAa,EAAES,OAAO,CAACC,WAAR;AAHM,KAAd;AANgD,GAAD,CAA1D;AAaA,QAAMC,OAAO,GAAGZ,MAAM,GAAG,CAAH,GAAO,GAA7B;AACA,MAAIa,eAAe,GAAG,MAAtB;;AACA,UAAQZ,aAAR;AACE,SAAKX,MAAM,CAACwB,IAAZ;AACED,MAAAA,eAAe,GAAG,WAAlB;AACA;;AACF,SAAKvB,MAAM,CAACe,MAAZ;AACEQ,MAAAA,eAAe,GAAG,sBAAlB;AACA;;AACF;AACE;AARJ;;AAWA,sBACE;AAAK,IAAA,GAAG,EAAEV,IAAV;AAAgB,IAAA,KAAK,kCAAOZ,KAAP;AAAcsB,MAAAA,eAAd;AAA+BD,MAAAA;AAA/B,MAArB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGG,CAACV,OAAD,IAAYH,gBAAZ,iBAAgC;AAAA,mCAAkBA,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHnC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlCD;;AAuCA,OAAO,MAAMgB,iBAA2B,GAAIC,KAAD,IAAW;AACpD,QAAM;AAAA,OAACjB,gBAAD;AAAA,OAAmBkB;AAAnB,MAA0C9B,QAAQ,CAAgB,IAAhB,CAAxD;AACA,QAAM+B,UAAU,GAAG9B,WAAW,CAC3B+B,KAAD,IAAmBF,mBAAmB,CAACE,KAAD,CADV,EAE5B,EAF4B,CAA9B;AAKA,sBACE,QAAC,SAAD,kCACMH,KADN;AAEE,IAAA,gBAAgB,EAAEjB,gBAFpB;AAGE,IAAA,MAAM,EAAEmB;AAHV;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdM;AAgBP,eAAerB,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { useDrop } from 'react-dnd'\nimport { Colors, AnimalTypes } from './colors'\nimport Animal from './Animal'\n\nconst style: React.CSSProperties = {\n  border: '1px solid gray',\n  height: '15rem',\n  width: '15rem',\n  padding: '2rem',\n  textAlign: 'center',\n}\n\nexport interface TargetBoxProps {\n  onDrop: (item: any) => void\n  lastDroppedColor?: string\n}\n\nconst TargetBox: React.FC<TargetBoxProps> = ({ onDrop, lastDroppedColor }) => {\n  const [{ isOver, draggingColor, canDrop }, drop] = useDrop({\n    accept: [Colors.YELLOW],\n    drop(item: any) {\n      onDrop(item.type)\n      return undefined\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      draggingColor: monitor.getItemType() as string,\n    }),\n  })\n\n  const opacity = isOver ? 1 : 0.7\n  let backgroundColor = '#fff'\n  switch (draggingColor) {\n    case Colors.BLUE:\n      backgroundColor = 'lightblue'\n      break\n    case Colors.YELLOW:\n      backgroundColor = 'lightgoldenrodyellow'\n      break\n    default:\n      break\n  }\n\n  return (\n    <div ref={drop} style={{ ...style, backgroundColor, opacity }}>\n      <p>Drop here.</p>\n\n      {!canDrop && lastDroppedColor && <p>Last dropped: {lastDroppedColor}</p>}\n    </div>\n  )\n}\n\nexport interface StatefulTargetBoxState {\n  lastDroppedColor: string | null\n}\nexport const StatefulTargetBox: React.FC = (props) => {\n  const [lastDroppedColor, setLastDroppedColor] = useState<string | null>(null)\n  const handleDrop = useCallback(\n    (color: string) => setLastDroppedColor(color),\n    [],\n  )\n\n  return (\n    <TargetBox\n      {...props}\n      lastDroppedColor={lastDroppedColor as string}\n      onDrop={handleDrop}\n    />\n  )\n}\n\nexport default TargetBox;"]},"metadata":{},"sourceType":"module"}